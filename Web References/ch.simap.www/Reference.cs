//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApp1.ch.simap.www {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapServerPortBinding", Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class SoapServerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeListForCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSearchNoticeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSearchNoticeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSearchNoticeXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActualCantonNoticeListForCategoryWithStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActualCantonNoticeListForCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActualCantonNoticeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPublishedNoticeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProviderFromNoticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeXmlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticePdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeListForSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeListForSubscriberDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeListForCategoryWithStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttachmentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapServerService() {
            this.Url = global::WindowsFormsApp1.Properties.Settings.Default.WindowsFormsApp1_ch_simap_www_SoapServerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAuthenticationCompletedEventHandler getAuthenticationCompleted;
        
        /// <remarks/>
        public event getNoticeXmlCompletedEventHandler getNoticeXmlCompleted;
        
        /// <remarks/>
        public event getNoticeListCompletedEventHandler getNoticeListCompleted;
        
        /// <remarks/>
        public event getNoticeListForCategoryCompletedEventHandler getNoticeListForCategoryCompleted;
        
        /// <remarks/>
        public event getSearchNoticeListCompletedEventHandler getSearchNoticeListCompleted;
        
        /// <remarks/>
        public event getSearchNoticeCountCompletedEventHandler getSearchNoticeCountCompleted;
        
        /// <remarks/>
        public event getSearchNoticeXmlCompletedEventHandler getSearchNoticeXmlCompleted;
        
        /// <remarks/>
        public event getActualCantonNoticeListForCategoryWithStatusCompletedEventHandler getActualCantonNoticeListForCategoryWithStatusCompleted;
        
        /// <remarks/>
        public event getActualCantonNoticeListForCategoryCompletedEventHandler getActualCantonNoticeListForCategoryCompleted;
        
        /// <remarks/>
        public event getActualCantonNoticeListCompletedEventHandler getActualCantonNoticeListCompleted;
        
        /// <remarks/>
        public event getPublishedNoticeListCompletedEventHandler getPublishedNoticeListCompleted;
        
        /// <remarks/>
        public event getProviderFromNoticeCompletedEventHandler getProviderFromNoticeCompleted;
        
        /// <remarks/>
        public event getNoticeXmlsCompletedEventHandler getNoticeXmlsCompleted;
        
        /// <remarks/>
        public event getNoticePdfCompletedEventHandler getNoticePdfCompleted;
        
        /// <remarks/>
        public event getNoticeListForSubscriberCompletedEventHandler getNoticeListForSubscriberCompleted;
        
        /// <remarks/>
        public event getNoticeListForSubscriberDateRangeCompletedEventHandler getNoticeListForSubscriberDateRangeCompleted;
        
        /// <remarks/>
        public event getNoticeListForCategoryWithStatusCompletedEventHandler getNoticeListForCategoryWithStatusCompleted;
        
        /// <remarks/>
        public event getNoticeHtmlCompletedEventHandler getNoticeHtmlCompleted;
        
        /// <remarks/>
        public event getAttachmentCompletedEventHandler getAttachmentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("success")]
        public bool getAuthentication() {
            object[] results = this.Invoke("getAuthentication", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAuthenticationAsync() {
            this.getAuthenticationAsync(null);
        }
        
        /// <remarks/>
        public void getAuthenticationAsync(object userState) {
            if ((this.getAuthenticationOperationCompleted == null)) {
                this.getAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuthenticationOperationCompleted);
            }
            this.InvokeAsync("getAuthentication", new object[0], this.getAuthenticationOperationCompleted, userState);
        }
        
        private void OngetAuthenticationOperationCompleted(object arg) {
            if ((this.getAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuthenticationCompleted(this, new getAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("noticeXml")]
        public string getNoticeXml(long docId) {
            object[] results = this.Invoke("getNoticeXml", new object[] {
                        docId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeXmlAsync(long docId) {
            this.getNoticeXmlAsync(docId, null);
        }
        
        /// <remarks/>
        public void getNoticeXmlAsync(long docId, object userState) {
            if ((this.getNoticeXmlOperationCompleted == null)) {
                this.getNoticeXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeXmlOperationCompleted);
            }
            this.InvokeAsync("getNoticeXml", new object[] {
                        docId}, this.getNoticeXmlOperationCompleted, userState);
        }
        
        private void OngetNoticeXmlOperationCompleted(object arg) {
            if ((this.getNoticeXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeXmlCompleted(this, new getNoticeXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getNoticeList(System.DateTime publishDate) {
            object[] results = this.Invoke("getNoticeList", new object[] {
                        publishDate});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeListAsync(System.DateTime publishDate) {
            this.getNoticeListAsync(publishDate, null);
        }
        
        /// <remarks/>
        public void getNoticeListAsync(System.DateTime publishDate, object userState) {
            if ((this.getNoticeListOperationCompleted == null)) {
                this.getNoticeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeListOperationCompleted);
            }
            this.InvokeAsync("getNoticeList", new object[] {
                        publishDate}, this.getNoticeListOperationCompleted, userState);
        }
        
        private void OngetNoticeListOperationCompleted(object arg) {
            if ((this.getNoticeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeListCompleted(this, new getNoticeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getNoticeListForCategory(string category, System.DateTime publishDate) {
            object[] results = this.Invoke("getNoticeListForCategory", new object[] {
                        category,
                        publishDate});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeListForCategoryAsync(string category, System.DateTime publishDate) {
            this.getNoticeListForCategoryAsync(category, publishDate, null);
        }
        
        /// <remarks/>
        public void getNoticeListForCategoryAsync(string category, System.DateTime publishDate, object userState) {
            if ((this.getNoticeListForCategoryOperationCompleted == null)) {
                this.getNoticeListForCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeListForCategoryOperationCompleted);
            }
            this.InvokeAsync("getNoticeListForCategory", new object[] {
                        category,
                        publishDate}, this.getNoticeListForCategoryOperationCompleted, userState);
        }
        
        private void OngetNoticeListForCategoryOperationCompleted(object arg) {
            if ((this.getNoticeListForCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeListForCategoryCompleted(this, new getNoticeListForCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getSearchNoticeList(string searchXml) {
            object[] results = this.Invoke("getSearchNoticeList", new object[] {
                        searchXml});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getSearchNoticeListAsync(string searchXml) {
            this.getSearchNoticeListAsync(searchXml, null);
        }
        
        /// <remarks/>
        public void getSearchNoticeListAsync(string searchXml, object userState) {
            if ((this.getSearchNoticeListOperationCompleted == null)) {
                this.getSearchNoticeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSearchNoticeListOperationCompleted);
            }
            this.InvokeAsync("getSearchNoticeList", new object[] {
                        searchXml}, this.getSearchNoticeListOperationCompleted, userState);
        }
        
        private void OngetSearchNoticeListOperationCompleted(object arg) {
            if ((this.getSearchNoticeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSearchNoticeListCompleted(this, new getSearchNoticeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("noticeList")]
        public string getSearchNoticeCount(string searchXml) {
            object[] results = this.Invoke("getSearchNoticeCount", new object[] {
                        searchXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSearchNoticeCountAsync(string searchXml) {
            this.getSearchNoticeCountAsync(searchXml, null);
        }
        
        /// <remarks/>
        public void getSearchNoticeCountAsync(string searchXml, object userState) {
            if ((this.getSearchNoticeCountOperationCompleted == null)) {
                this.getSearchNoticeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSearchNoticeCountOperationCompleted);
            }
            this.InvokeAsync("getSearchNoticeCount", new object[] {
                        searchXml}, this.getSearchNoticeCountOperationCompleted, userState);
        }
        
        private void OngetSearchNoticeCountOperationCompleted(object arg) {
            if ((this.getSearchNoticeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSearchNoticeCountCompleted(this, new getSearchNoticeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("noticeList")]
        public string getSearchNoticeXml(string searchXml, string arg1) {
            object[] results = this.Invoke("getSearchNoticeXml", new object[] {
                        searchXml,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSearchNoticeXmlAsync(string searchXml, string arg1) {
            this.getSearchNoticeXmlAsync(searchXml, arg1, null);
        }
        
        /// <remarks/>
        public void getSearchNoticeXmlAsync(string searchXml, string arg1, object userState) {
            if ((this.getSearchNoticeXmlOperationCompleted == null)) {
                this.getSearchNoticeXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSearchNoticeXmlOperationCompleted);
            }
            this.InvokeAsync("getSearchNoticeXml", new object[] {
                        searchXml,
                        arg1}, this.getSearchNoticeXmlOperationCompleted, userState);
        }
        
        private void OngetSearchNoticeXmlOperationCompleted(object arg) {
            if ((this.getSearchNoticeXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSearchNoticeXmlCompleted(this, new getSearchNoticeXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getActualCantonNoticeListForCategoryWithStatus(string category, string status) {
            object[] results = this.Invoke("getActualCantonNoticeListForCategoryWithStatus", new object[] {
                        category,
                        status});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getActualCantonNoticeListForCategoryWithStatusAsync(string category, string status) {
            this.getActualCantonNoticeListForCategoryWithStatusAsync(category, status, null);
        }
        
        /// <remarks/>
        public void getActualCantonNoticeListForCategoryWithStatusAsync(string category, string status, object userState) {
            if ((this.getActualCantonNoticeListForCategoryWithStatusOperationCompleted == null)) {
                this.getActualCantonNoticeListForCategoryWithStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActualCantonNoticeListForCategoryWithStatusOperationCompleted);
            }
            this.InvokeAsync("getActualCantonNoticeListForCategoryWithStatus", new object[] {
                        category,
                        status}, this.getActualCantonNoticeListForCategoryWithStatusOperationCompleted, userState);
        }
        
        private void OngetActualCantonNoticeListForCategoryWithStatusOperationCompleted(object arg) {
            if ((this.getActualCantonNoticeListForCategoryWithStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActualCantonNoticeListForCategoryWithStatusCompleted(this, new getActualCantonNoticeListForCategoryWithStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getActualCantonNoticeListForCategory(string category) {
            object[] results = this.Invoke("getActualCantonNoticeListForCategory", new object[] {
                        category});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getActualCantonNoticeListForCategoryAsync(string category) {
            this.getActualCantonNoticeListForCategoryAsync(category, null);
        }
        
        /// <remarks/>
        public void getActualCantonNoticeListForCategoryAsync(string category, object userState) {
            if ((this.getActualCantonNoticeListForCategoryOperationCompleted == null)) {
                this.getActualCantonNoticeListForCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActualCantonNoticeListForCategoryOperationCompleted);
            }
            this.InvokeAsync("getActualCantonNoticeListForCategory", new object[] {
                        category}, this.getActualCantonNoticeListForCategoryOperationCompleted, userState);
        }
        
        private void OngetActualCantonNoticeListForCategoryOperationCompleted(object arg) {
            if ((this.getActualCantonNoticeListForCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActualCantonNoticeListForCategoryCompleted(this, new getActualCantonNoticeListForCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getActualCantonNoticeList() {
            object[] results = this.Invoke("getActualCantonNoticeList", new object[0]);
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getActualCantonNoticeListAsync() {
            this.getActualCantonNoticeListAsync(null);
        }
        
        /// <remarks/>
        public void getActualCantonNoticeListAsync(object userState) {
            if ((this.getActualCantonNoticeListOperationCompleted == null)) {
                this.getActualCantonNoticeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActualCantonNoticeListOperationCompleted);
            }
            this.InvokeAsync("getActualCantonNoticeList", new object[0], this.getActualCantonNoticeListOperationCompleted, userState);
        }
        
        private void OngetActualCantonNoticeListOperationCompleted(object arg) {
            if ((this.getActualCantonNoticeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActualCantonNoticeListCompleted(this, new getActualCantonNoticeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getPublishedNoticeList(System.DateTime publishDate) {
            object[] results = this.Invoke("getPublishedNoticeList", new object[] {
                        publishDate});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getPublishedNoticeListAsync(System.DateTime publishDate) {
            this.getPublishedNoticeListAsync(publishDate, null);
        }
        
        /// <remarks/>
        public void getPublishedNoticeListAsync(System.DateTime publishDate, object userState) {
            if ((this.getPublishedNoticeListOperationCompleted == null)) {
                this.getPublishedNoticeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPublishedNoticeListOperationCompleted);
            }
            this.InvokeAsync("getPublishedNoticeList", new object[] {
                        publishDate}, this.getPublishedNoticeListOperationCompleted, userState);
        }
        
        private void OngetPublishedNoticeListOperationCompleted(object arg) {
            if ((this.getPublishedNoticeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPublishedNoticeListCompleted(this, new getPublishedNoticeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("provider")]
        public provider getProviderFromNotice(long docId) {
            object[] results = this.Invoke("getProviderFromNotice", new object[] {
                        docId});
            return ((provider)(results[0]));
        }
        
        /// <remarks/>
        public void getProviderFromNoticeAsync(long docId) {
            this.getProviderFromNoticeAsync(docId, null);
        }
        
        /// <remarks/>
        public void getProviderFromNoticeAsync(long docId, object userState) {
            if ((this.getProviderFromNoticeOperationCompleted == null)) {
                this.getProviderFromNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProviderFromNoticeOperationCompleted);
            }
            this.InvokeAsync("getProviderFromNotice", new object[] {
                        docId}, this.getProviderFromNoticeOperationCompleted, userState);
        }
        
        private void OngetProviderFromNoticeOperationCompleted(object arg) {
            if ((this.getProviderFromNoticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProviderFromNoticeCompleted(this, new getProviderFromNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("noticeXmls")]
        public string getNoticeXmls(System.DateTime publishDate) {
            object[] results = this.Invoke("getNoticeXmls", new object[] {
                        publishDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeXmlsAsync(System.DateTime publishDate) {
            this.getNoticeXmlsAsync(publishDate, null);
        }
        
        /// <remarks/>
        public void getNoticeXmlsAsync(System.DateTime publishDate, object userState) {
            if ((this.getNoticeXmlsOperationCompleted == null)) {
                this.getNoticeXmlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeXmlsOperationCompleted);
            }
            this.InvokeAsync("getNoticeXmls", new object[] {
                        publishDate}, this.getNoticeXmlsOperationCompleted, userState);
        }
        
        private void OngetNoticeXmlsOperationCompleted(object arg) {
            if ((this.getNoticeXmlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeXmlsCompleted(this, new getNoticeXmlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("pdf", DataType="base64Binary")]
        public byte[] getNoticePdf(long docId) {
            object[] results = this.Invoke("getNoticePdf", new object[] {
                        docId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getNoticePdfAsync(long docId) {
            this.getNoticePdfAsync(docId, null);
        }
        
        /// <remarks/>
        public void getNoticePdfAsync(long docId, object userState) {
            if ((this.getNoticePdfOperationCompleted == null)) {
                this.getNoticePdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticePdfOperationCompleted);
            }
            this.InvokeAsync("getNoticePdf", new object[] {
                        docId}, this.getNoticePdfOperationCompleted, userState);
        }
        
        private void OngetNoticePdfOperationCompleted(object arg) {
            if ((this.getNoticePdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticePdfCompleted(this, new getNoticePdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getNoticeListForSubscriber(System.DateTime publishDate, int subscriptionId) {
            object[] results = this.Invoke("getNoticeListForSubscriber", new object[] {
                        publishDate,
                        subscriptionId});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeListForSubscriberAsync(System.DateTime publishDate, int subscriptionId) {
            this.getNoticeListForSubscriberAsync(publishDate, subscriptionId, null);
        }
        
        /// <remarks/>
        public void getNoticeListForSubscriberAsync(System.DateTime publishDate, int subscriptionId, object userState) {
            if ((this.getNoticeListForSubscriberOperationCompleted == null)) {
                this.getNoticeListForSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeListForSubscriberOperationCompleted);
            }
            this.InvokeAsync("getNoticeListForSubscriber", new object[] {
                        publishDate,
                        subscriptionId}, this.getNoticeListForSubscriberOperationCompleted, userState);
        }
        
        private void OngetNoticeListForSubscriberOperationCompleted(object arg) {
            if ((this.getNoticeListForSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeListForSubscriberCompleted(this, new getNoticeListForSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getNoticeListForSubscriberDateRange(System.DateTime publishDateFrom, System.DateTime publishDateTo, int subscriptionId) {
            object[] results = this.Invoke("getNoticeListForSubscriberDateRange", new object[] {
                        publishDateFrom,
                        publishDateTo,
                        subscriptionId});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeListForSubscriberDateRangeAsync(System.DateTime publishDateFrom, System.DateTime publishDateTo, int subscriptionId) {
            this.getNoticeListForSubscriberDateRangeAsync(publishDateFrom, publishDateTo, subscriptionId, null);
        }
        
        /// <remarks/>
        public void getNoticeListForSubscriberDateRangeAsync(System.DateTime publishDateFrom, System.DateTime publishDateTo, int subscriptionId, object userState) {
            if ((this.getNoticeListForSubscriberDateRangeOperationCompleted == null)) {
                this.getNoticeListForSubscriberDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeListForSubscriberDateRangeOperationCompleted);
            }
            this.InvokeAsync("getNoticeListForSubscriberDateRange", new object[] {
                        publishDateFrom,
                        publishDateTo,
                        subscriptionId}, this.getNoticeListForSubscriberDateRangeOperationCompleted, userState);
        }
        
        private void OngetNoticeListForSubscriberDateRangeOperationCompleted(object arg) {
            if ((this.getNoticeListForSubscriberDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeListForSubscriberDateRangeCompleted(this, new getNoticeListForSubscriberDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("noticeList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Nullable<long>[] getNoticeListForCategoryWithStatus(string category, string status, System.DateTime publishDate) {
            object[] results = this.Invoke("getNoticeListForCategoryWithStatus", new object[] {
                        category,
                        status,
                        publishDate});
            return ((System.Nullable<long>[])(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeListForCategoryWithStatusAsync(string category, string status, System.DateTime publishDate) {
            this.getNoticeListForCategoryWithStatusAsync(category, status, publishDate, null);
        }
        
        /// <remarks/>
        public void getNoticeListForCategoryWithStatusAsync(string category, string status, System.DateTime publishDate, object userState) {
            if ((this.getNoticeListForCategoryWithStatusOperationCompleted == null)) {
                this.getNoticeListForCategoryWithStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeListForCategoryWithStatusOperationCompleted);
            }
            this.InvokeAsync("getNoticeListForCategoryWithStatus", new object[] {
                        category,
                        status,
                        publishDate}, this.getNoticeListForCategoryWithStatusOperationCompleted, userState);
        }
        
        private void OngetNoticeListForCategoryWithStatusOperationCompleted(object arg) {
            if ((this.getNoticeListForCategoryWithStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeListForCategoryWithStatusCompleted(this, new getNoticeListForCategoryWithStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("noticeHtml")]
        public string getNoticeHtml(long docId) {
            object[] results = this.Invoke("getNoticeHtml", new object[] {
                        docId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeHtmlAsync(long docId) {
            this.getNoticeHtmlAsync(docId, null);
        }
        
        /// <remarks/>
        public void getNoticeHtmlAsync(long docId, object userState) {
            if ((this.getNoticeHtmlOperationCompleted == null)) {
                this.getNoticeHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeHtmlOperationCompleted);
            }
            this.InvokeAsync("getNoticeHtml", new object[] {
                        docId}, this.getNoticeHtmlOperationCompleted, userState);
        }
        
        private void OngetNoticeHtmlOperationCompleted(object arg) {
            if ((this.getNoticeHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeHtmlCompleted(this, new getNoticeHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://notice.server.soap.common.exchange.autinform.de/", ResponseNamespace="http://notice.server.soap.common.exchange.autinform.de/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("file", DataType="base64Binary")]
        public byte[] getAttachment(long docId) {
            object[] results = this.Invoke("getAttachment", new object[] {
                        docId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getAttachmentAsync(long docId) {
            this.getAttachmentAsync(docId, null);
        }
        
        /// <remarks/>
        public void getAttachmentAsync(long docId, object userState) {
            if ((this.getAttachmentOperationCompleted == null)) {
                this.getAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttachmentOperationCompleted);
            }
            this.InvokeAsync("getAttachment", new object[] {
                        docId}, this.getAttachmentOperationCompleted, userState);
        }
        
        private void OngetAttachmentOperationCompleted(object arg) {
            if ((this.getAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttachmentCompleted(this, new getAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class provider {
        
        private authentificationProfile authentificationProfileField;
        
        private contactProfile contactProfileField;
        
        private System.DateTime creationField;
        
        private bool creationFieldSpecified;
        
        private int idField;
        
        private System.DateTime lastupdatedField;
        
        private bool lastupdatedFieldSpecified;
        
        private string lastupdatedFromField;
        
        private string providerCommentField;
        
        private userProfile userProfileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public authentificationProfile authentificationProfile {
            get {
                return this.authentificationProfileField;
            }
            set {
                this.authentificationProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public contactProfile contactProfile {
            get {
                return this.contactProfileField;
            }
            set {
                this.contactProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime creation {
            get {
                return this.creationField;
            }
            set {
                this.creationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationSpecified {
            get {
                return this.creationFieldSpecified;
            }
            set {
                this.creationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastupdated {
            get {
                return this.lastupdatedField;
            }
            set {
                this.lastupdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastupdatedSpecified {
            get {
                return this.lastupdatedFieldSpecified;
            }
            set {
                this.lastupdatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastupdatedFrom {
            get {
                return this.lastupdatedFromField;
            }
            set {
                this.lastupdatedFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string providerComment {
            get {
                return this.providerCommentField;
            }
            set {
                this.providerCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userProfile userProfile {
            get {
                return this.userProfileField;
            }
            set {
                this.userProfileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class authentificationProfile {
        
        private authentication authenticationField;
        
        private category[] categoriesAuthorisedField;
        
        private category categoryField;
        
        private string categoryCodeField;
        
        private string[] categoryCodeListField;
        
        private language languageField;
        
        private string languageCodeField;
        
        private string loginField;
        
        private string passwordField;
        
        private int roleField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public authentication authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categoriesAuthorised", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public category[] categoriesAuthorised {
            get {
                return this.categoriesAuthorisedField;
            }
            set {
                this.categoriesAuthorisedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public category category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string categoryCode {
            get {
                return this.categoryCodeField;
            }
            set {
                this.categoryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categoryCodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] categoryCodeList {
            get {
                return this.categoryCodeListField;
            }
            set {
                this.categoryCodeListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public language language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageCode {
            get {
                return this.languageCodeField;
            }
            set {
                this.languageCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class authentication {
        
        private bool addNewFieldsField;
        
        private long asUserIDField;
        
        private string asUserNameField;
        
        private string asUserRedirectField;
        
        private string cantonField;
        
        private string categoryField;
        
        private string companyEnabledField;
        
        private long companyIdField;
        
        private string contractorEnabledField;
        
        private int contractorRoleIdField;
        
        private string enableYNField;
        
        private int highlightedTopNavigationField;
        
        private string languageField;
        
        private bool loggedInField;
        
        private bool loginErrorField;
        
        private int loginTriesField;
        
        private string mailAdressField;
        
        private string mobileNumberField;
        
        private bool mustGTCacceptedField;
        
        private string natureUserField;
        
        private string navigationPageField;
        
        private string selectedLanguageField;
        
        private string step2PasswordField;
        
        private int typeField;
        
        private long userIDField;
        
        private string userNameField;
        
        private string userPasswordField;
        
        private string userRedirectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addNewFields {
            get {
                return this.addNewFieldsField;
            }
            set {
                this.addNewFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long asUserID {
            get {
                return this.asUserIDField;
            }
            set {
                this.asUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string asUserName {
            get {
                return this.asUserNameField;
            }
            set {
                this.asUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string asUserRedirect {
            get {
                return this.asUserRedirectField;
            }
            set {
                this.asUserRedirectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string canton {
            get {
                return this.cantonField;
            }
            set {
                this.cantonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string companyEnabled {
            get {
                return this.companyEnabledField;
            }
            set {
                this.companyEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contractorEnabled {
            get {
                return this.contractorEnabledField;
            }
            set {
                this.contractorEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int contractorRoleId {
            get {
                return this.contractorRoleIdField;
            }
            set {
                this.contractorRoleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string enableYN {
            get {
                return this.enableYNField;
            }
            set {
                this.enableYNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int highlightedTopNavigation {
            get {
                return this.highlightedTopNavigationField;
            }
            set {
                this.highlightedTopNavigationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool loggedIn {
            get {
                return this.loggedInField;
            }
            set {
                this.loggedInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool loginError {
            get {
                return this.loginErrorField;
            }
            set {
                this.loginErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int loginTries {
            get {
                return this.loginTriesField;
            }
            set {
                this.loginTriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mailAdress {
            get {
                return this.mailAdressField;
            }
            set {
                this.mailAdressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileNumber {
            get {
                return this.mobileNumberField;
            }
            set {
                this.mobileNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mustGTCaccepted {
            get {
                return this.mustGTCacceptedField;
            }
            set {
                this.mustGTCacceptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string natureUser {
            get {
                return this.natureUserField;
            }
            set {
                this.natureUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string navigationPage {
            get {
                return this.navigationPageField;
            }
            set {
                this.navigationPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string selectedLanguage {
            get {
                return this.selectedLanguageField;
            }
            set {
                this.selectedLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string step2Password {
            get {
                return this.step2PasswordField;
            }
            set {
                this.step2PasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userRedirect {
            get {
                return this.userRedirectField;
            }
            set {
                this.userRedirectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class authorityType {
        
        private string categoryField;
        
        private string codeField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class municipality {
        
        private string codeField;
        
        private int idField;
        
        private string imageField;
        
        private string keyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class federalInstitution {
        
        private string authorityField;
        
        private string cantonCodeField;
        
        private string dictionaryKeyField;
        
        private int idField;
        
        private int parentIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string authority {
            get {
                return this.authorityField;
            }
            set {
                this.authorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cantonCode {
            get {
                return this.cantonCodeField;
            }
            set {
                this.cantonCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dictionaryKey {
            get {
                return this.dictionaryKeyField;
            }
            set {
                this.dictionaryKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int parentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class canton {
        
        private string codeField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class userProfile {
        
        private string addressField;
        
        private string addressSupplementField;
        
        private string authDemandField;
        
        private string authorityTedField;
        
        private string authorityTedOtherField;
        
        private string authorityTypeField;
        
        private canton cantonField;
        
        private string cantonCodeField;
        
        private string cantonExportField;
        
        private string cityField;
        
        private string cityCodeField;
        
        private country countryField;
        
        private string countryCodeField;
        
        private string faxField;
        
        private federalInstitution federalInstitutionField;
        
        private string federalInstitutionIdField;
        
        private string mailField;
        
        private municipality municipalityField;
        
        private string nameField;
        
        private string phoneField;
        
        private authorityType typeField;
        
        private string urlField;
        
        private string zipCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addressSupplement {
            get {
                return this.addressSupplementField;
            }
            set {
                this.addressSupplementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string authDemand {
            get {
                return this.authDemandField;
            }
            set {
                this.authDemandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string authorityTed {
            get {
                return this.authorityTedField;
            }
            set {
                this.authorityTedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string authorityTedOther {
            get {
                return this.authorityTedOtherField;
            }
            set {
                this.authorityTedOtherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string authorityType {
            get {
                return this.authorityTypeField;
            }
            set {
                this.authorityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public canton canton {
            get {
                return this.cantonField;
            }
            set {
                this.cantonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cantonCode {
            get {
                return this.cantonCodeField;
            }
            set {
                this.cantonCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cantonExport {
            get {
                return this.cantonExportField;
            }
            set {
                this.cantonExportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public country country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public federalInstitution federalInstitution {
            get {
                return this.federalInstitutionField;
            }
            set {
                this.federalInstitutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string federalInstitutionId {
            get {
                return this.federalInstitutionIdField;
            }
            set {
                this.federalInstitutionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public municipality municipality {
            get {
                return this.municipalityField;
            }
            set {
                this.municipalityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public authorityType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class country {
        
        private string codeField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class contactProfile {
        
        private string cantonLegalField;
        
        private string cantonPrivateYNField;
        
        private string firstNameField;
        
        private string informationField;
        
        private string invoiceAddressField;
        
        private string invoiceAddressSupplementField;
        
        private string invoiceCityField;
        
        private country invoiceCountryField;
        
        private string invoiceCountryCodeField;
        
        private string invoiceFaxField;
        
        private string invoiceFirstNameField;
        
        private string invoiceLastNameField;
        
        private string invoiceMailField;
        
        private string invoiceOrganisationField;
        
        private string invoicePhoneField;
        
        private string invoiceSalutationField;
        
        private string invoiceZipCodeField;
        
        private string lastNameField;
        
        private string mailField;
        
        private string newCantonModeField;
        
        private string oldCantonModeField;
        
        private string phoneField;
        
        private string salutationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cantonLegal {
            get {
                return this.cantonLegalField;
            }
            set {
                this.cantonLegalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cantonPrivateYN {
            get {
                return this.cantonPrivateYNField;
            }
            set {
                this.cantonPrivateYNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string information {
            get {
                return this.informationField;
            }
            set {
                this.informationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceAddress {
            get {
                return this.invoiceAddressField;
            }
            set {
                this.invoiceAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceAddressSupplement {
            get {
                return this.invoiceAddressSupplementField;
            }
            set {
                this.invoiceAddressSupplementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceCity {
            get {
                return this.invoiceCityField;
            }
            set {
                this.invoiceCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public country invoiceCountry {
            get {
                return this.invoiceCountryField;
            }
            set {
                this.invoiceCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceCountryCode {
            get {
                return this.invoiceCountryCodeField;
            }
            set {
                this.invoiceCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceFax {
            get {
                return this.invoiceFaxField;
            }
            set {
                this.invoiceFaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceFirstName {
            get {
                return this.invoiceFirstNameField;
            }
            set {
                this.invoiceFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceLastName {
            get {
                return this.invoiceLastNameField;
            }
            set {
                this.invoiceLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceMail {
            get {
                return this.invoiceMailField;
            }
            set {
                this.invoiceMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceOrganisation {
            get {
                return this.invoiceOrganisationField;
            }
            set {
                this.invoiceOrganisationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoicePhone {
            get {
                return this.invoicePhoneField;
            }
            set {
                this.invoicePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceSalutation {
            get {
                return this.invoiceSalutationField;
            }
            set {
                this.invoiceSalutationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invoiceZipCode {
            get {
                return this.invoiceZipCodeField;
            }
            set {
                this.invoiceZipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newCantonMode {
            get {
                return this.newCantonModeField;
            }
            set {
                this.newCantonModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string oldCantonMode {
            get {
                return this.oldCantonModeField;
            }
            set {
                this.oldCantonModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string salutation {
            get {
                return this.salutationField;
            }
            set {
                this.salutationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class language {
        
        private string documentationField;
        
        private string firstCodeField;
        
        private int idField;
        
        private string nameField;
        
        private string secondCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstCode {
            get {
                return this.firstCodeField;
            }
            set {
                this.firstCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string secondCode {
            get {
                return this.secondCodeField;
            }
            set {
                this.secondCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class type {
        
        private string addTypeField;
        
        private string categoryField;
        
        private string descriptionDEField;
        
        private string descriptionENField;
        
        private string descriptionFRField;
        
        private string descriptionITField;
        
        private string initDocumentField;
        
        private string type1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addType {
            get {
                return this.addTypeField;
            }
            set {
                this.addTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descriptionDE {
            get {
                return this.descriptionDEField;
            }
            set {
                this.descriptionDEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descriptionEN {
            get {
                return this.descriptionENField;
            }
            set {
                this.descriptionENField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descriptionFR {
            get {
                return this.descriptionFRField;
            }
            set {
                this.descriptionFRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string descriptionIT {
            get {
                return this.descriptionITField;
            }
            set {
                this.descriptionITField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initDocument {
            get {
                return this.initDocumentField;
            }
            set {
                this.initDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("type", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type1 {
            get {
                return this.type1Field;
            }
            set {
                this.type1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notice.server.soap.common.exchange.autinform.de/")]
    public partial class category {
        
        private string catCDField;
        
        private string deField;
        
        private string enField;
        
        private string frField;
        
        private string itField;
        
        private string internalField;
        
        private int orderField;
        
        private bool orderFieldSpecified;
        
        private type[] typeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string catCD {
            get {
                return this.catCDField;
            }
            set {
                this.catCDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DE {
            get {
                return this.deField;
            }
            set {
                this.deField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EN {
            get {
                return this.enField;
            }
            set {
                this.enField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FR {
            get {
                return this.frField;
            }
            set {
                this.frField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IT {
            get {
                return this.itField;
            }
            set {
                this.itField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @internal {
            get {
                return this.internalField;
            }
            set {
                this.internalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool orderSpecified {
            get {
                return this.orderFieldSpecified;
            }
            set {
                this.orderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("typeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public type[] typeList {
            get {
                return this.typeListField;
            }
            set {
                this.typeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAuthenticationCompletedEventHandler(object sender, getAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeXmlCompletedEventHandler(object sender, getNoticeXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeListCompletedEventHandler(object sender, getNoticeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeListForCategoryCompletedEventHandler(object sender, getNoticeListForCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeListForCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeListForCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSearchNoticeListCompletedEventHandler(object sender, getSearchNoticeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSearchNoticeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSearchNoticeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSearchNoticeCountCompletedEventHandler(object sender, getSearchNoticeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSearchNoticeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSearchNoticeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getSearchNoticeXmlCompletedEventHandler(object sender, getSearchNoticeXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSearchNoticeXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSearchNoticeXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getActualCantonNoticeListForCategoryWithStatusCompletedEventHandler(object sender, getActualCantonNoticeListForCategoryWithStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActualCantonNoticeListForCategoryWithStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActualCantonNoticeListForCategoryWithStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getActualCantonNoticeListForCategoryCompletedEventHandler(object sender, getActualCantonNoticeListForCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActualCantonNoticeListForCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActualCantonNoticeListForCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getActualCantonNoticeListCompletedEventHandler(object sender, getActualCantonNoticeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActualCantonNoticeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActualCantonNoticeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPublishedNoticeListCompletedEventHandler(object sender, getPublishedNoticeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPublishedNoticeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPublishedNoticeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getProviderFromNoticeCompletedEventHandler(object sender, getProviderFromNoticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProviderFromNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProviderFromNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public provider Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((provider)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeXmlsCompletedEventHandler(object sender, getNoticeXmlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeXmlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeXmlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticePdfCompletedEventHandler(object sender, getNoticePdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticePdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticePdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeListForSubscriberCompletedEventHandler(object sender, getNoticeListForSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeListForSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeListForSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeListForSubscriberDateRangeCompletedEventHandler(object sender, getNoticeListForSubscriberDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeListForSubscriberDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeListForSubscriberDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeListForCategoryWithStatusCompletedEventHandler(object sender, getNoticeListForCategoryWithStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeListForCategoryWithStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeListForCategoryWithStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getNoticeHtmlCompletedEventHandler(object sender, getNoticeHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAttachmentCompletedEventHandler(object sender, getAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591